"use strict";(self.webpackChunkdatafuse=self.webpackChunkdatafuse||[]).push([[5123],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return p}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},u=Object.keys(t);for(r=0;r<u.length;r++)n=u[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(r=0;r<u.length;r++)n=u[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),s=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},l=function(t){var e=s(t.components);return r.createElement(c.Provider,{value:e},t.children)},g={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,u=t.originalType,c=t.parentName,l=o(t,["components","mdxType","originalType","parentName"]),m=s(n),p=a,d=m["".concat(c,".").concat(p)]||m[p]||g[p]||u;return n?r.createElement(d,i(i({ref:e},l),{},{components:n})):r.createElement(d,i({ref:e},l))}));function p(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var u=n.length,i=new Array(u);i[0]=m;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:a,i[1]=o;for(var s=2;s<u;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3894:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return m}});var r=n(7462),a=n(3366),u=(n(7294),n(3905)),i=["components"],o={id:"aggregate-count-distinct",title:"countDistinct"},c=void 0,s={unversionedId:"sqlstatement/aggregate-functions/aggregate-count-distinct",id:"sqlstatement/aggregate-functions/aggregate-count-distinct",isDocsHomePage:!1,title:"countDistinct",description:"Aggregate function.",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/sqlstatement/aggregate-functions/aggregate-count-distinct.md",sourceDirName:"sqlstatement/aggregate-functions",slug:"/sqlstatement/aggregate-functions/aggregate-count-distinct",permalink:"/zh-CN/docs/sqlstatement/aggregate-functions/aggregate-count-distinct",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/sqlstatement/aggregate-functions/aggregate-count-distinct.md",version:"current",frontMatter:{id:"aggregate-count-distinct",title:"countDistinct"},sidebar:"tutorialSidebar",previous:{title:"DISTINCT",permalink:"/zh-CN/docs/sqlstatement/aggregate-functions/aggregate-combinator"},next:{title:"countIf",permalink:"/zh-CN/docs/sqlstatement/aggregate-functions/aggregate-count-if"}},l=[{value:"Syntax",id:"syntax",children:[]},{value:"Arguments",id:"arguments",children:[]},{value:"Return Type",id:"return-type",children:[]},{value:"Examples",id:"examples",children:[]}],g={toc:l};function m(t){var e=t.components,n=(0,a.Z)(t,i);return(0,u.kt)("wrapper",(0,r.Z)({},g,n,{components:e,mdxType:"MDXLayout"}),(0,u.kt)("p",null,"Aggregate function."),(0,u.kt)("p",null,"The count(distinct ...) function calculates the uniq value of a set of values."),(0,u.kt)("p",null,(0,u.kt)("strong",{parentName:"p"},"Note:")," NULL values are not counted."),(0,u.kt)("h2",{id:"syntax"},"Syntax"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"COUNT(distinct arguments ...)\nUNIQ(arguments)\n")),(0,u.kt)("h2",{id:"arguments"},"Arguments"),(0,u.kt)("table",null,(0,u.kt)("thead",{parentName:"table"},(0,u.kt)("tr",{parentName:"thead"},(0,u.kt)("th",{parentName:"tr",align:null},"Arguments"),(0,u.kt)("th",{parentName:"tr",align:null},"Description"))),(0,u.kt)("tbody",{parentName:"table"},(0,u.kt)("tr",{parentName:"tbody"},(0,u.kt)("td",{parentName:"tr",align:null},"expression"),(0,u.kt)("td",{parentName:"tr",align:null},"Any expression, size of the arguments is ","[1, 32]")))),(0,u.kt)("h2",{id:"return-type"},"Return Type"),(0,u.kt)("p",null,"UInt64"),(0,u.kt)("h2",{id:"examples"},"Examples"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"mysql> SELECT count(distinct number % 3) FROM numbers(1000);\n+------------------------------+\n| count(distinct (number % 3)) |\n+------------------------------+\n|                            3 |\n+------------------------------+\n\nmysql>  SELECT uniq(number % 3, number) FROM numbers(1000);\n+----------------------------+\n| uniq((number % 3), number) |\n+----------------------------+\n|                       1000 |\n+----------------------------+\n1 row in set (0.02 sec)\n\n\nmysql>  SELECT uniq(number % 3, number) = count(distinct number %3, number)  FROM numbers(1000);\n+---------------------------------------------------------------------+\n| (uniq((number % 3), number) = count(distinct (number % 3), number)) |\n+---------------------------------------------------------------------+\n|                                                                true |\n+---------------------------------------------------------------------+\n1 row in set (0.03 sec\n")))}m.isMDXComponent=!0}}]);