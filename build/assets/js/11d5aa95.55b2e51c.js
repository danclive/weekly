"use strict";(self.webpackChunkdatafuse=self.webpackChunkdatafuse||[]).push([[6325],{3905:function(e,t,n){n.d(t,{Zo:function(){return g},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,g=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||l[m]||o;return n?r.createElement(f,i(i({ref:t},g),{},{components:n})):r.createElement(f,i({ref:t},g))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6770:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return g},default:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={id:"aggregate-combinator",title:"DISTINCT"},s="Aggregate Function Combinators",u={unversionedId:"sqlstatement/aggregate-functions/aggregate-combinator",id:"sqlstatement/aggregate-functions/aggregate-combinator",isDocsHomePage:!1,title:"DISTINCT",description:"The name of an aggregate function can have a suffix appended to it. This changes the way the aggregate function works.",source:"@site/docs/sqlstatement/aggregate-functions/aggregate-combinator.md",sourceDirName:"sqlstatement/aggregate-functions",slug:"/sqlstatement/aggregate-functions/aggregate-combinator",permalink:"/docs/sqlstatement/aggregate-functions/aggregate-combinator",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/sqlstatement/aggregate-functions/aggregate-combinator.md",version:"current",frontMatter:{id:"aggregate-combinator",title:"DISTINCT"},sidebar:"tutorialSidebar",previous:{title:"AVG",permalink:"/docs/sqlstatement/aggregate-functions/aggregate-avg"},next:{title:"countDistinct",permalink:"/docs/sqlstatement/aggregate-functions/aggregate-count-distinct"}},g=[{value:"Distinct",id:"distinct",children:[]},{value:"Examples",id:"examples",children:[]}],l={toc:g};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"aggregate-function-combinators"},"Aggregate Function Combinators"),(0,o.kt)("p",null,"The name of an aggregate function can have a suffix appended to it. This changes the way the aggregate function works."),(0,o.kt)("h2",{id:"distinct"},"Distinct"),(0,o.kt)("p",null,"Every unique combination of arguments will be aggregated only once. Repeating values are ignored."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"count(distinct(expression))\nsum(distinct(expression))\nmin(distinct(expression))\nmax(distinct(expression))\n")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"mysql> SELECT sum(distinct(number%3)) FROM numbers_mt(10);\n+----------------------------+\n| sum(distinct (number % 3)) |\n+----------------------------+\n|                          3 |\n+----------------------------+\n")))}p.isMDXComponent=!0}}]);